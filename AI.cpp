#include "AI.h"
#include <cassert>

// This file is used only in the Reach, not the Core.
// You do not need to make any changes to this file for the Core

string getAIMoveString(const BuildingState& buildingState) {

    // for loop that goes thru elevators
    // if elevator not in service do 2nd for loop

    for (int e = 0; e < s; e++) {
        if (!buildingState.elevators[e].isServicing) {
            // go thru each of the floors
            int floor = 0;
            for (int f = 0; f < NUM_FLOORS; f++) {
                
            }
        }
    }

/*
    for (_Elevator e : buildingState.elevators) {
        if (!e.isServicing)
            ...
        }
    }

    for (int i=0; i< numpeople?; ++i){
        check person[i].anger > current max:
            current max = person[i].anger
            angeriest_person = i
    }

*/
    // minimize explodedpeople
    // go thru each floors and look at people, find max anger value on floor, 
    // goto one with highest anger value
    // 
    // 
    // send closest elevator on service (subj to change)
    // 
    // a service move is e >> by elevator id >> by f >> floor #
    // pickup move e >> elevator id >> p 
    // game move s or q

    
    return "";
}

string getAIPickupList(const Move& move, const BuildingState& buildingState, const Floor& floorToPickup) {
/*
* Requires: buildingState is a valid state representing the current building
*           move is a pickup move that was generated by getAIMoveString()
*           floorToPickup represents the floor the pickup move occurred.
* Modifies: move
* Effects:  Returns a string representing which people indices 
*           should be picked up. The string should share the exact format 
*           as a human player's pickup list input.

getAIPickupList is basically the function that is called when there is a pickup move 
and the AI needs to decide which people from that floor to pick up
so for example say the elevator is on floor 6 and there are 4 people in indices 
0, 1, 2, and 3 you need to decide which of those 4 people to pick up and make sure 
that all those people are going in the same direction 
how you decide which is the AI part
*/
    return "";
}

